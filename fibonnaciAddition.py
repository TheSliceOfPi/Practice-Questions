'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''
###Recursive Fibonacci###
'''def fibo(num):
    if(num==0):
        return 1
    elif(num==1):
        return 1
    else:
        return fibo(num-1)+fibo(num-2)

total=0
num=10
for i in range(num,0,-1):
    check=fibo(i)
    if(check%2==0):
        total+=check
print(total)  '''
#########################################

####Memoization fibonacci
def fibo(num):
    if not(cache[num]==-1):
        return cache[num]
    if(num==0):
        cache[num]=1
        return cache[num]
    elif(num==1):
        cache[num]=1
        return cache[num]
    else:
        newVal=fibo(num-1)+fibo(num-2)
        cache[num]=newVal
        return cache[num]

num=10
cache=[-1]*(num+1)
fibo(num)
total=0
for val in cache:
    if(val%2==0):
        total+=val
print(total)
########################################